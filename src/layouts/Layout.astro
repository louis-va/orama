---
import Container from "./Container.astro";
import Header from "./Header.astro";
import Background from "./Background.astro";
import Cursor from "../components/common/Cursor.astro";
import Footer from "./Footer.astro";

interface Props {
	title: string;
	description: string;
}

const { title, description } = Astro.props;
---

<!doctype html>
<html lang="fr">
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content={description} />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
	</head>
	<body>
		<Cursor />
		<Background />
		<Header />
		<Container>
			<main>
				<slot />
			</main>
			<Footer />
		</Container>
	</body>
</html>

<style is:global>
	/* GLOBAL */
	@font-face {
		font-family: "Basically A Mono";
		src: url("/fonts/BasicallyAMono-Regular.woff2") format("woff2");
		font-weight: 400;
		font-style: normal;
		font-display: swap;
	}
	@font-face {
		font-family: "Basically A Mono";
		src: url("/fonts/BasicallyAMono-SemiBold.woff2") format("woff2");
		font-weight: 600;
		font-style: normal;
		font-display: swap;
	}

	:root {
		--white: rgb(255, 255, 255);

		--light-gray: rgb(248, 246, 246);
		--dark-gray-90: rgba(224, 222, 222, 0.9);

		--black: rgb(7, 9, 12);
		--black-60: rgba(7, 9, 9, 0.6);
		--black-40: rgba(7, 9, 9, 0.4);
		--black-7: rgba(7, 9, 9, 0.075);
		--black-4: rgba(7, 9, 9, 0.04);
		--black-0: rgba(7, 9, 9, 0);

		--text-xs: 0.75rem;
		--text-small: 0.875rem;
		--text-base: 1rem;
		--text-medium: 1.125rem;
		--text-large: 1.5rem;
		--text-xl: 1.75rem;
		--text-2xl: 2.25rem;
		--card-w: 300px;
	}

	@media screen and (max-width: 768px) {
		:root {
			--card-w: 250px;
		}
		.mobile-hidden {
			display: none;
		}
	}

	@media screen and (max-width: 480px) {
		:root {
			--card-w: 200px;
		}
	}

	html {
		font-family: "Basically A Mono", monospace;
		background: var(--light-gray);
		color: var(--black);
		font-size: var(--text-base);
		scroll-behavior: smooth;
	}
	::selection {
		background-color: var(--black);
		color: var(--white);
	}

	/* TEXT */
	.paragraph {
		font-size: var(--text-base);
		line-height: 135%;
		margin-bottom: 0.5rem;
	}
	.heading {
		text-transform: uppercase;
		font-size: var(--text-small);
		font-weight: 600;
		margin-bottom: 0.25rem;
	}

	/* RESET */
	*,
	*::before,
	*::after {
		box-sizing: border-box;
	}
	* {
		margin: 0;
	}
	html,
	body {
		height: 100%;
	}
	body {
		line-height: 1.5;
		-webkit-font-smoothing: antialiased;
	}
	img,
	picture,
	video,
	canvas,
	svg {
		display: block;
		max-width: 100%;
	}
	input,
	button,
	textarea,
	select {
		font: inherit;
	}
	p,
	h1,
	h2,
	h3,
	h4,
	h5,
	h6 {
		overflow-wrap: break-word;
	}
	button {
		background: none;
		color: inherit;
		border: none;
		padding: 0;
		font: inherit;
		cursor: pointer;
		outline: inherit;
	}
	a {
		text-decoration: none;
		color: var(--color-text);
	}
	ul {
		margin-block-start: 0px;
		margin-block-end: 0px;
		margin-inline-start: 0px;
		margin-inline-end: 0px;
		padding-inline-start: 0px;
	}
	picture {
		pointer-events: none;
	}
</style>

<script>
	// check if touch device
	if ("ontouchstart" in window || navigator.maxTouchPoints > 0) {
		document.body.classList.add("touch-device");
	}
</script>
