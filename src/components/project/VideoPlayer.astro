---
export type Props = {
  type: "video/mp4" | "youtube" | "vimeo";
  src: string;
  title: string;
  poster: string;
  crossorigin?: 'anonymous' | 'use-credentials';
};

const { type, src, title, poster, crossorigin = 'anonymous' } = Astro.props;
---

<video
  id="player"
  class="plyr"
  data-type={type}
  data-src={src}
  data-title={title}
  data-poster={poster}
  crossorigin={crossorigin}>
</video>

<script>
  import Plyr from 'plyr';
  import type { Options, SourceInfo, Source } from 'plyr';
  import 'plyr/dist/plyr.css';

  document.addEventListener('astro:page-load', () => {
    const el = document.getElementById('player');
    if (!el) return;

    const { type, src, title, poster } = el.dataset as { type: string, src: string, title: string, poster: string};
    const sources: Source[] = [
      {
        ...(type === 'youtube' || type === 'vimeo'
          ? { provider: type }
          : { type }),
        src,
      },
    ];
    const source: SourceInfo = { type: 'video', title, poster, sources };

    const options: Options = {
      controls: [
        'play-large',
        'play',
        'progress',
        'current-time',
        'mute',
        'volume',
        'settings',
        'pip',
        'airplay',
        'fullscreen',
      ],
      settings: ['quality'],
      volume: 1,
    };

    const player = new Plyr(el as HTMLVideoElement, options);
    player.source = source;
    player.poster = poster;
  });
</script>

<style is:global>
  :root {
    --plyr-color-main: var(--gray);
    --plyr-badge-border-radius: 0px;
    --plyr-control-radius: 0px;
    --plyr-menu-radius: 0px;
    --plyr-tooltip-radius: 0px;
    --plyr-range-track-height: 4px;
    --plyr-range-thumb-height: 8px;
    --plyr-video-control-color: var(--white);
    --plyr-range-fill-background: var(--white);
    --plyr-font-family: var(--font-mono);
  }
  .plyr__control {
    border-radius: 0px !important;
  }
  .plyr__video-embed iframe,
  .plyr__video-wrapper video,
  .plyr__video-wrapper {
    aspect-ratio: 16/9 !important;
  }

  /* Square sliders â€” */
  .plyr__volume input[type="range"]::-webkit-slider-runnable-track,
  .plyr__progress input[type="range"]::-webkit-slider-runnable-track,
  .plyr__volume input[type="range"]::-webkit-slider-thumb,
  .plyr__progress input[type="range"]::-webkit-slider-thumb {
    border-radius: 0 !important;
  }
  .plyr__volume input[type="range"]::-moz-range-track,
  .plyr__progress input[type="range"]::-moz-range-track,
  .plyr__volume input[type="range"]::-moz-range-thumb,
  .plyr__progress input[type="range"]::-moz-range-thumb {
    border-radius: 0 !important;
  }
  .plyr__volume input[type="range"]::-ms-track,
  .plyr__progress input[type="range"]::-ms-track,
  .plyr__volume input[type="range"]::-ms-thumb,
  .plyr__progress input[type="range"]::-ms-thumb {
    border-radius: 0 !important;
  }

</style>
