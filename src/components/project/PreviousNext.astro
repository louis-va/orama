---
import ArrowLeft from '@assets/icons/ArrowLeft.astro';
import ArrowRight from '@assets/icons/ArrowRight.astro';

interface Props {
	previousUrl: string;
  previousTitle: string;
  nextUrl: string;
  nextTitle: string;
}

const { previousUrl, previousTitle, nextUrl, nextTitle } = Astro.props;
---

<div class="navigation">
  <a class="previous" href={previousUrl} data-cursor="focus">
    <div class="icon">
      <ArrowLeft className="size-small" />
    </div>
    <div class="text">
      <span class="info">Précédent</span>
      <span class="title">{previousTitle}</span>
    </div>
    <div class="corners">
      <div class="corner top-left"></div>
      <div class="corner top-right"></div>
      <div class="corner bottom-left"></div>
      <div class="corner bottom-right"></div>
    </div>
  </a>
  <a class="next" href={nextUrl} data-cursor="focus">
    <div class="icon">
      <ArrowRight className="size-small" />
    </div>
    <div class="text">
      <span class="info">Suivant</span>
      <span class="title">{nextTitle}</span>
    </div>
    <div class="corners">
      <div class="corner top-left"></div>
      <div class="corner top-right"></div>
      <div class="corner bottom-left"></div>
      <div class="corner bottom-right"></div>
    </div>
  </a>
</div>

<style>
  .navigation {
    margin-top: 5rem;
    width: 100%;
    display: grid;
    grid-template-columns: repeat(12, 1fr);
    column-gap: 0.25rem;
  }
  a {
    position: relative;
    padding: 1rem;
    display: flex;
    align-items: center;
    gap: 1rem;
  }
  a .icon {
    pointer-events: none;
  }
  a .text {
    display: flex;
    flex-direction: column;
    gap: 0.25rem;
    font-size: var(--text-small);
    text-transform: uppercase;
    pointer-events: none;
  }
  a .text .info {
    color: var(--foreground-60);
  }
  a.previous {
    grid-column-start: 4;
    grid-column-end: 7;
    grid-row-start: 1;
    grid-row-end: 1;
  }
  a.next {
    grid-column-start: 7;
    grid-column-end: 10;
    grid-row-start: 1;
    grid-row-end: 1;
  }

  .corners {
		position: absolute;
		width: 100%;
		height: 100%;
		top: 0;
		left: 0;
		z-index: 20;
		pointer-events: none;
	}
	.corner {
		position: absolute;
		width: 0.75rem;
		height: 0.75rem;
		transition: all ease-out 0.15s;
	}
	.corner.top-left {
		border-top: 1px solid var(--foreground-60);
		border-left: 1px solid var(--foreground-60);
		top: 0;
		left: 0;
	}
	.corner.top-right {
		border-top: 1px solid var(--foreground-60);
		border-right: 1px solid var(--foreground-60);
		top: 0;
		right: 0;
	}
	.corner.bottom-left {
		border-bottom: 1px solid var(--foreground-60);
		border-left: 1px solid var(--foreground-60);
		bottom: 0;
		left: 0;
	}
	.corner.bottom-right {
		border-bottom: 1px solid var(--foreground-60);
		border-right: 1px solid var(--foreground-60);
		bottom: 0;
		right: 0;
	}

  a:hover .corners .corner.top-left {
		top: 0.25rem;
		left: 0.25rem;
	}
	a:hover .corners .corner.top-right {
		top: 0.25rem;
		right: 0.25rem;
	}
	a:hover .corners .corner.bottom-left {
		bottom: 0.25rem;
		left: 0.25rem;
	}
	a:hover .corners .corner.bottom-right {
		bottom: 0.25rem;
		right: 0.25rem;
	}

  @media screen and (max-width: 960px) {
    .navigation {
      grid-template-columns: repeat(6, 1fr);
    }
    a.previous {
      grid-column-start: 1;
      grid-column-end: 4;
      grid-row-start: 1;
      grid-row-end: 1;
    }
    a.next {
      grid-column-start: 4;
      grid-column-end: 7;
      grid-row-start: 1;
      grid-row-end: 1;
    }
  }

  @media screen and (max-width: 768px) {
    .navigation {
      row-gap: 1rem;
      column-gap: 0;
    }
    a.previous {
      grid-column-start: 1;
      grid-column-end: 7;
      grid-row-start: 1;
      grid-row-end: 1;
    }
    a.next {
      grid-column-start: 1;
      grid-column-end: 7;
      grid-row-start: 2;
      grid-row-end: 2;
    }
  }

  @media screen and (max-width: 480px) {
    
  }
</style>