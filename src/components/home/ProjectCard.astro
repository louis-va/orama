---
import type { ImageMetadata } from "astro";
import { Image } from "astro:assets";
import Play from "@assets/icons/Play.astro";
import Spinner from "@assets/icons/Spinner.astro";

interface Props {
	slug: string;
	id: number;
	title: string;
	filter: string;
	year: number;
	thumbnail: ImageMetadata;
	preview: string;
}

const { slug, id, title, filter, year, thumbnail, preview } = Astro.props;

// Get project's thumbnail src
const webmFiles: any = import.meta.glob("/src/content/project/*/*.webm", { eager: true });
const previewSrc: string = webmFiles[`/src/content/project/${slug}/${preview}`]?.default;
---

<div class="container" id={`project-card-${id}`}>
	<div class="wrapper">
		<a class="card" href=`/project/${slug}` data-cursor="focus" >
			<div class="top">
				<div class="image">
					<Image src={thumbnail} alt="" loading="eager" class="thumbnail" />
					<video
						class="preview-video"
						muted
						playsinline
						preload="none"
						loop
						style="opacity: 0"
					></video>
					<div class="image-overlay"></div>
				</div>
				<div class="side">
					<div class="text">
						<span>{filter}</span>
						<span>{year}</span>
					</div>
				</div>
			</div>
			<div class="bottom">
				<div class="title">
					<span>{title}</span>
					<span class="id">
						<Play className="size-2xs" />
						{id}
					</span>
				</div>
				<div class="spinner" style="opacity: 0">
					<Spinner className="size-small" />
				</div>
			</div>
		</a>
	</div>
	<div class="corners">
		<div class="corner top-left"></div>
		<div class="corner top-right"></div>
		<div class="corner bottom-left"></div>
		<div class="corner bottom-right"></div>
	</div>
</div>

<script define:vars={{id, previewSrc}}>
	document.addEventListener('astro:page-load', () => {
		const container = document.querySelector(`#project-card-${id}`);
		if (!container) return;

		const card = container.querySelector('.card');
		const thumbnail = container.querySelector('.thumbnail');
		const preview = container.querySelector('.preview-video');
		const spinner = container.querySelector('.spinner');

		const loadVideo = () => {
			if (!preview.src) {
				spinner.style.opacity = 1;
				preview.src = previewSrc;
				preview.load();
			}
		}

		const playVideo = () => {
			if (preview.src) {
				spinner.style.opacity = 0;
				thumbnail.style.opacity = 0;
				preview.style.opacity = 1;
				preview.play();
			}
		}

		const hideVideo = () => {
			preview.pause();
			preview.currentTime = 0;
			preview.style.opacity = 0;
			spinner.style.opacity = 0;
			thumbnail.style.opacity = 1;
			preview.removeAttribute('src');
		}

		card.addEventListener('mouseenter', loadVideo);
		card.addEventListener('mouseleave', hideVideo);
		card.addEventListener('touchstart', loadVideo);
		card.addEventListener('touchend', hideVideo);
		card.addEventListener('touchcancel', hideVideo);
		preview.addEventListener('loadeddata', playVideo);
	});
</script>

<style>
	.container {
		display: block;
		position: relative;
		width: 100%;
	}
	.wrapper {
		padding: 1.5rem;
	}

	.card {
		position: relative;
		font-size: var(--text-xs);
		font-weight: 500;
		text-transform: uppercase;
	}
	.card .top {
		display: flex;
		pointer-events: none;
	}
	.card .top .image {
		position: relative;
		background: var(--foreground);
	}
	.card .top .image .thumbnail {
		aspect-ratio: 1/1;
		height: auto;
		pointer-events: none;
		transition: opacity 0.5s ease-in-out 0.25s;
	}
	.card .top .image .preview-video {
		position: absolute;
		width: 100%;
		top: 0;
		left: 0;
		aspect-ratio: 1/1;
		height: auto;
		pointer-events: none;
		transition: opacity 0.5s ease-in-out 0.25s;
	}
	.card .top .image .image-overlay {
		position: absolute;
		bottom: 0;
		left: 0;
		width: 100%;
		height: 100%;
		z-index: 10;
		backdrop-filter: invert(100%);
		opacity: 0;
		transition: opacity 0.5s ease-in-out 0.25s;
	}
	.card:hover .top .image .image-overlay {
		opacity: 1;
	}
	.card .top .side {
		display: flex;
		justify-content: center;
		background-color: var(--foreground-10);
		max-height: 100%;
		min-width: 1.25rem;
		max-width: 1.25rem;
		padding: 0.3rem 0;
	}
	.card .top .side .text {
		display: flex;
		justify-content: space-between;
		align-items: center;
		writing-mode: vertical-lr;
		transform: scale(-1, -1);
	}

	.card .bottom {
		display: flex;
		pointer-events: none;
	}
	.card .bottom .title {
		display: flex;
		align-items: center;
		justify-content: space-between;
		background-color: var(--foreground-10);
		padding: 0 0.3rem;
		height: 1.25rem;
		width: calc(100% - 1.25rem);
		max-width: calc(100% - 1.25rem);
		white-space: nowrap;
		overflow: hidden;
		text-overflow: ellipsis;
	}
	.card .bottom .title .id {
		display: flex;
		align-items: center;
		gap: 0.25rem;
	}
	.card .bottom .spinner {
		display: flex;
		align-items: center;
		justify-content: center;
		width: 1.25rem;
		height: 1.25rem;
		animation: spin 1.2s linear infinite;
	}

	.corners {
		position: absolute;
		width: 100%;
		height: 100%;
		top: 0;
		left: 0;
		z-index: 20;
		pointer-events: none;
	}
	.corner {
		position: absolute;
		width: 0.75rem;
		height: 0.75rem;
		transition: all ease-out 0.15s;
	}
	.corner.top-left {
		border-top: 1px solid var(--foreground-60);
		border-left: 1px solid var(--foreground-60);
		top: 0;
		left: 0;
	}
	.corner.top-right {
		border-top: 1px solid var(--foreground-60);
		border-right: 1px solid var(--foreground-60);
		top: 0;
		right: 0;
	}
	.corner.bottom-left {
		border-bottom: 1px solid var(--foreground-60);
		border-left: 1px solid var(--foreground-60);
		bottom: 0;
		left: 0;
	}
	.corner.bottom-right {
		border-bottom: 1px solid var(--foreground-60);
		border-right: 1px solid var(--foreground-60);
		bottom: 0;
		right: 0;
	}
	.container:has(.card:hover) .corners .corner.top-left {
		top: 0.25rem;
		left: 0.25rem;
	}
	.container:has(.card:hover) .corners .corner.top-right {
		top: 0.25rem;
		right: 0.25rem;
	}
	.container:has(.card:hover) .corners .corner.bottom-left {
		bottom: 0.25rem;
		left: 0.25rem;
	}
	.container:has(.card:hover) .corners .corner.bottom-right {
		bottom: 0.25rem;
		right: 0.25rem;
	}

	@keyframes spin {
		0% { transform: rotate(0deg); }
		100% { transform: rotate(360deg); }
	}
</style>

<style is:global>
  .touch-device .card:hover .top .image .image-overlay {
		opacity: 0 !important;
	}

	.touch-device .container:has(.card:hover) .corners .corner.top-left {
		top: 0 !important;
		left: 0 !important;
	}
	.touch-device .container:has(.card:hover) .corners .corner.top-right {
		top: 0 !important;
		right: 0 !important;
	}
	.touch-device .container:has(.card:hover) .corners .corner.bottom-left {
		bottom: 0 !important;
		left: 0 !important;
	}
	.touch-device .container:has(.card:hover) .corners .corner.bottom-right {
		bottom: 0 !important;
		right: 0 !important;
	}
</style>